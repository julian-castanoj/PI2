{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JULIAN C\\\\Desktop\\\\PI2.2\\\\PI2\\\\Front-End\\\\src\\\\pages\\\\RegistrarMiembros.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../styles/registrarMiembros.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrarMiembros = () => {\n  _s();\n\n  // Estado para el formulario y la lista de registros\n  const [formData, setFormData] = useState({\n    razonSocial: '',\n    nombre: '',\n    formaParticipacion: '',\n    materialesGestionar: 0,\n    pesoReutilizable: 0,\n    pesoNoReutilizable: 0,\n    metaAprovechamiento: 0,\n    metaQMA: 0,\n    qmqm: 0,\n    lineaBase: 0\n  });\n  const [registros, setRegistros] = useState([]); // Lista de registros\n\n  const [editandoId, setEditandoId] = useState(null); // ID en modo de edición\n  // Maneja los cambios en los campos del formulario\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }; // Maneja el envío del formulario para agregar nuevos registros\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Crea un registro con un ID único (timestamp actual)\n\n    const nuevoRegistro = { ...formData,\n      id: Date.now()\n    };\n    setRegistros([...registros, nuevoRegistro]); // Restablece los campos del formulario\n\n    setFormData({\n      razonSocial: '',\n      nombre: '',\n      formaParticipacion: '',\n      materialesGestionar: 0,\n      pesoReutilizable: 0,\n      pesoNoReutilizable: 0,\n      metaAprovechamiento: 0,\n      metaQMA: 0,\n      qmqm: 0,\n      lineaBase: 0\n    });\n  }; // Maneja la edición de un registro\n\n\n  const editarRegistro = id => {\n    const registroEditado = registros.find(registro => registro.id === id);\n\n    if (registroEditado) {\n      // Llena el formulario con los datos del registro a editar\n      setFormData({ ...registroEditado\n      }); // Establece el ID en modo de edición\n\n      setEditandoId(id);\n    }\n  }; // Maneja la actualización de un registro editado\n\n\n  const guardarEdicion = () => {\n    const indiceEdicion = registros.findIndex(registro => registro.id === editandoId);\n\n    if (indiceEdicion !== -1) {\n      // Actualiza el registro en la lista con los nuevos datos del formulario\n      registros[indiceEdicion] = { ...formData,\n        id: editandoId\n      }; // Restablece el formulario y el modo de edición\n\n      setRegistros([...registros]);\n      setFormData({\n        razonSocial: '',\n        nombre: '',\n        formaParticipacion: '',\n        materialesGestionar: 0,\n        pesoReutilizable: 0,\n        pesoNoReutilizable: 0,\n        metaAprovechamiento: 0,\n        metaQMA: 0,\n        qmqm: 0,\n        lineaBase: 0\n      });\n      setEditandoId(null);\n    }\n  }; // Maneja la eliminación de un registro\n\n\n  const eliminarRegistro = id => {\n    const registrosActualizados = registros.filter(registro => registro.id !== id);\n    setRegistros(registrosActualizados); // Si está en modo de edición y se elimina el registro en edición, restablece el formulario y el modo de edición\n\n    if (editandoId === id) {\n      setFormData({\n        razonSocial: '',\n        nombre: '',\n        formaParticipacion: '',\n        materialesGestionar: 0,\n        pesoReutilizable: 0,\n        pesoNoReutilizable: 0,\n        metaAprovechamiento: 0,\n        metaQMA: 0,\n        qmqm: 0,\n        lineaBase: 0\n      });\n      setEditandoId(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registrar-miembros-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Formulario de Registro de Miembros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Raz\\xF3n Social\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"razonSocial\",\n          value: formData.razonSocial,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), editandoId ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: guardarEdicion,\n        className: \"edit-button\",\n        children: \"Guardar Edici\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/usuarios\",\n        className: \"register-button\",\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: registros.map(registro => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: registro.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editarRegistro(registro.id),\n          className: \"edit-button\",\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => eliminarRegistro(registro.id),\n          className: \"delete-button\",\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, registro.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrarMiembros, \"r8H9xi0+bPGPQcfa57DYvPb3H04=\");\n\n_c = RegistrarMiembros;\nexport default RegistrarMiembros;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrarMiembros\");","map":{"version":3,"sources":["C:/Users/JULIAN C/Desktop/PI2.2/PI2/Front-End/src/pages/RegistrarMiembros.jsx"],"names":["React","useState","Link","RegistrarMiembros","formData","setFormData","razonSocial","nombre","formaParticipacion","materialesGestionar","pesoReutilizable","pesoNoReutilizable","metaAprovechamiento","metaQMA","qmqm","lineaBase","registros","setRegistros","editandoId","setEditandoId","handleChange","e","name","value","target","handleSubmit","preventDefault","nuevoRegistro","id","Date","now","editarRegistro","registroEditado","find","registro","guardarEdicion","indiceEdicion","findIndex","eliminarRegistro","registrosActualizados","filter","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/registrarMiembros.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RegistrarMiembros = () => {\r\n  // Estado para el formulario y la lista de registros\r\n  const [formData, setFormData] = useState({\r\n    razonSocial: '',\r\n    nombre: '',\r\n    formaParticipacion: '',\r\n    materialesGestionar: 0,\r\n    pesoReutilizable: 0,\r\n    pesoNoReutilizable: 0,\r\n    metaAprovechamiento: 0,\r\n    metaQMA: 0,\r\n    qmqm: 0,\r\n    lineaBase: 0,\r\n  });\r\n\r\n  const [registros, setRegistros] = useState([]); // Lista de registros\r\n  const [editandoId, setEditandoId] = useState(null); // ID en modo de edición\r\n\r\n  // Maneja los cambios en los campos del formulario\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // Maneja el envío del formulario para agregar nuevos registros\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Crea un registro con un ID único (timestamp actual)\r\n    const nuevoRegistro = { ...formData, id: Date.now() };\r\n    setRegistros([...registros, nuevoRegistro]);\r\n    // Restablece los campos del formulario\r\n    setFormData({\r\n      razonSocial: '',\r\n      nombre: '',\r\n      formaParticipacion: '',\r\n      materialesGestionar: 0,\r\n      pesoReutilizable: 0,\r\n      pesoNoReutilizable: 0,\r\n      metaAprovechamiento: 0,\r\n      metaQMA: 0,\r\n      qmqm: 0,\r\n      lineaBase: 0,\r\n    });\r\n  };\r\n\r\n  // Maneja la edición de un registro\r\n  const editarRegistro = (id) => {\r\n    const registroEditado = registros.find((registro) => registro.id === id);\r\n    if (registroEditado) {\r\n      // Llena el formulario con los datos del registro a editar\r\n      setFormData({ ...registroEditado });\r\n      // Establece el ID en modo de edición\r\n      setEditandoId(id);\r\n    }\r\n  };\r\n\r\n  // Maneja la actualización de un registro editado\r\n  const guardarEdicion = () => {\r\n    const indiceEdicion = registros.findIndex((registro) => registro.id === editandoId);\r\n    if (indiceEdicion !== -1) {\r\n      // Actualiza el registro en la lista con los nuevos datos del formulario\r\n      registros[indiceEdicion] = { ...formData, id: editandoId };\r\n      // Restablece el formulario y el modo de edición\r\n      setRegistros([...registros]);\r\n      setFormData({\r\n        razonSocial: '',\r\n        nombre: '',\r\n        formaParticipacion: '',\r\n        materialesGestionar: 0,\r\n        pesoReutilizable: 0,\r\n        pesoNoReutilizable: 0,\r\n        metaAprovechamiento: 0,\r\n        metaQMA: 0,\r\n        qmqm: 0,\r\n        lineaBase: 0,\r\n      });\r\n      setEditandoId(null);\r\n    }\r\n  };\r\n\r\n  // Maneja la eliminación de un registro\r\n  const eliminarRegistro = (id) => {\r\n    const registrosActualizados = registros.filter((registro) => registro.id !== id);\r\n    setRegistros(registrosActualizados);\r\n    // Si está en modo de edición y se elimina el registro en edición, restablece el formulario y el modo de edición\r\n    if (editandoId === id) {\r\n      setFormData({\r\n        razonSocial: '',\r\n        nombre: '',\r\n        formaParticipacion: '',\r\n        materialesGestionar: 0,\r\n        pesoReutilizable: 0,\r\n        pesoNoReutilizable: 0,\r\n        metaAprovechamiento: 0,\r\n        metaQMA: 0,\r\n        qmqm: 0,\r\n        lineaBase: 0,\r\n      });\r\n      setEditandoId(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"registrar-miembros-page\">\r\n      <h2>Formulario de Registro de Miembros</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Campos de formulario */}\r\n        <div className=\"form-group\">\r\n          <label>Razón Social</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"razonSocial\"\r\n            value={formData.razonSocial}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {/* Resto de campos de formulario */}\r\n        <button type=\"submit\" className=\"submit-button\">\r\n          Registrar\r\n        </button>\r\n        {editandoId ? (\r\n          <button onClick={guardarEdicion} className=\"edit-button\">\r\n            Guardar Edición\r\n          </button>\r\n        ) : null}\r\n        <Link to=\"/usuarios\" className=\"register-button\">\r\n          Cancelar\r\n        </Link>\r\n      </form>\r\n      <h2>Registros</h2>\r\n      <ul>\r\n        {/* Lista de registros */}\r\n        {registros.map((registro) => (\r\n          <li key={registro.id}>\r\n            <span>{registro.nombre}</span>\r\n            {/* Botón para editar el registro */}\r\n            <button onClick={() => editarRegistro(registro.id)} className=\"edit-button\">\r\n              Editar\r\n            </button>\r\n            {/* Botón para eliminar el registro */}\r\n            <button onClick={() => eliminarRegistro(registro.id)} className=\"delete-button\">\r\n              Eliminar\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrarMiembros;\r\n\r\n"]},"metadata":{},"sourceType":"module"}