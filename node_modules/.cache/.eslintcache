[{"C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\index.js":"1","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\App.js":"2","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\reportWebVitals.js":"3","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Inicio.jsx":"4","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Usuarios.jsx":"5","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Estadisticas.jsx":"6","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Gestores.jsx":"7","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Logout.jsx":"8","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Transformadores.jsx":"9","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\RegistrarGestores.jsx":"10","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Transacciones.jsx":"11","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\RegistrarMiembros.jsx":"12","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\RegistrarTransformadores.jsx":"13","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\components\\Sidebar.jsx":"14","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\RegistrarTransacciones.jsx":"15"},{"size":281,"mtime":1697174223460,"results":"16","hashOfConfig":"17"},{"size":1857,"mtime":1697521369352,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1697174223464,"results":"19","hashOfConfig":"17"},{"size":163,"mtime":1697174223461,"results":"20","hashOfConfig":"17"},{"size":3660,"mtime":1697517005381,"results":"21","hashOfConfig":"17"},{"size":182,"mtime":1697174223460,"results":"22","hashOfConfig":"17"},{"size":3636,"mtime":1697174223461,"results":"23","hashOfConfig":"17"},{"size":165,"mtime":1697174223461,"results":"24","hashOfConfig":"17"},{"size":3772,"mtime":1697516652769,"results":"25","hashOfConfig":"17"},{"size":9510,"mtime":1697515550230,"results":"26","hashOfConfig":"17"},{"size":3670,"mtime":1697521393458,"results":"27","hashOfConfig":"17"},{"size":8386,"mtime":1697515896967,"results":"28","hashOfConfig":"17"},{"size":9819,"mtime":1697513240159,"results":"29","hashOfConfig":"17"},{"size":2480,"mtime":1697174223459,"results":"30","hashOfConfig":"17"},{"size":6576,"mtime":1697523664066,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"jpt68q",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"35"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"35"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\index.js",[],[],["82","83"],"C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\App.js",[],[],"C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\reportWebVitals.js",[],[],"C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Inicio.jsx",[],[],"C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Usuarios.jsx",[],[],"C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Estadisticas.jsx",[],[],"C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Gestores.jsx",[],[],"C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Logout.jsx",[],[],"C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Transformadores.jsx",[],[],"C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\RegistrarGestores.jsx",["84"],[],"import React, { useState } from 'react';\r\nimport '../styles/registrarMiembros.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RegistrarGestores = () => {\r\n  const [formData, setFormData] = useState({\r\n    nombre: '',\r\n    capacidad: 0,\r\n    nit: 0,\r\n    telefono: 0,\r\n    direccion: '',\r\n    estado: true,\r\n    categoria_municipio: '',\r\n    municipio: '',\r\n    correo: '',\r\n    toneladas_recolectadas: '',\r\n    puntos_recoleccion: '',\r\n    mecanismos_recoleccion: '',\r\n    materiales_recolectados: ''\r\n  });\r\n\r\n  const [registros, setRegistros] = useState([]);\r\n  const [editandoId, setEditandoId] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    \r\n    const userConfirmed = window.confirm(\"¿Estás seguro de que deseas enviar el formulario?\");\r\n  \r\n    if (userConfirmed) {\r\n      \r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      };\r\n  \r\n      try {\r\n        console.log(formData);\r\n        const response = await fetch('http://localhost:3000/gestor/registrar', requestOptions);\r\n        \r\n        if (response.ok) {\r\n          console.log('Registro exitoso');\r\n        } else {\r\n          console.error('Error al registrar');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al realizar la solicitud:', error);\r\n      }\r\n    } else {\r\n      \r\n      console.log('Envío del formulario cancelado');\r\n    }\r\n  };\r\n  \r\n\r\n  const handleCancelar = () => {\r\n    const confirmCancel = window.confirm(\"¿Seguro que quieres cancelar?\");\r\n    if (confirmCancel) {\r\n      // Redirige a la página de gestores (\"/gestores\")\r\n      window.location.href = \"/gestores\";\r\n    }\r\n  };\r\n\r\n  const editarRegistro = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/gestor/${id}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setFormData({ ...data });\r\n        setEditandoId(id);\r\n      } else {\r\n        console.error('Error al obtener detalles del registro');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al realizar la solicitud:', error);\r\n    }\r\n  };\r\n\r\n  const guardarEdicion = async () => {\r\n    const indiceEdicion = registros.findIndex((registro) => registro.id === editandoId);\r\n    if (indiceEdicion !== -1) {\r\n      const registroActualizado = { ...formData, id: editandoId };\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/gestor/${editandoId}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(registroActualizado),\r\n        });\r\n        if (response.ok) {\r\n          \r\n          const nuevosRegistros = [...registros];\r\n          nuevosRegistros[indiceEdicion] = registroActualizado;\r\n          setRegistros(nuevosRegistros);\r\n  \r\n          \r\n          setFormData({\r\n            nombre: '',\r\n            capacidad: 0,\r\n            nit: 0,\r\n            telefono: 0,\r\n            direccion: '',\r\n            estado: true,\r\n            categoria_municipio: '',\r\n            municipio: '',\r\n            correo: '',\r\n            toneladas_recolectadas: '',\r\n            puntos_recoleccion: '',\r\n            mecanismos_recoleccion: '',\r\n            materiales_recolectados: ''\r\n          });\r\n          setEditandoId(null);\r\n  \r\n          console.log('Edición exitosa');\r\n        } else {\r\n          console.error('Error al editar el registro');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al realizar la solicitud:', error);\r\n      }\r\n    }\r\n  };\r\n  \r\n  const eliminarRegistro = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/gestor/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (response.ok) {\r\n        \r\n        const registrosActualizados = registros.filter((registro) => registro.id !== id);\r\n        setRegistros(registrosActualizados);\r\n  \r\n        \r\n        if (editandoId === id) {\r\n          setFormData({\r\n            nombre: '',\r\n            capacidad: 0,\r\n            nit: 0,\r\n            telefono: 0,\r\n            direccion: '',\r\n            estado: true,\r\n            categoria_municipio: '',\r\n            municipio: '',\r\n            correo: '',\r\n            toneladas_recolectadas: '',\r\n            puntos_recoleccion: '',\r\n            mecanismos_recoleccion: '',\r\n            materiales_recolectados: ''\r\n          });\r\n          setEditandoId(null);\r\n        }\r\n  \r\n        console.log('Eliminación exitosa');\r\n      } else {\r\n        console.error('Error al eliminar el registro');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al realizar la solicitud:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"registrar-miembros-page\">\r\n      <h2>Formulario de Registro de Gestores</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Nombre</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nombre\"\r\n            value={formData.nombre}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Capacidad</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"capacidad\"\r\n            value={formData.capacidad}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>NIT</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"nit\"\r\n            value={formData.nit}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Teléfono</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"telefono\"\r\n            value={formData.telefono}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Dirección</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"direccion\"\r\n            value={formData.direccion}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Estado</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"estado\"\r\n            checked={formData.estado}\r\n            onChange={(e) => setFormData({ ...formData, estado: e.target.checked })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Categoría Municipio</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"categoria_municipio\"\r\n            value={formData.categoria_municipio}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Municipio</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"municipio\"\r\n            value={formData.municipio}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Correo</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"correo\"\r\n            value={formData.correo}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Toneladas Recolectadas</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"toneladas_recolectadas\"\r\n            value={formData.toneladas_recolectadas}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Puntos de Recolección</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"puntos_recoleccion\"\r\n            value={formData.puntos_recoleccion}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Mecanismos de Recolección</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"mecanismos_recoleccion\"\r\n            value={formData.mecanismos_recoleccion}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Materiales Recolectados</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"materiales_recolectados\"\r\n            value={formData.materiales_recolectados}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button type=\"submit\" className=\"submit-button\">Registrar</button>\r\n          {editandoId ? (\r\n            <button onClick={guardarEdicion} className=\"edit-button\">\r\n              Guardar Edición\r\n            </button>\r\n          ) : null}\r\n          <button type=\"button\" className=\"register-button\" onClick={handleCancelar}>Cancelar</button>\r\n        </div>\r\n      </form>\r\n      <h2>Registros</h2>\r\n      <ul>\r\n        {registros.map((registro) => (\r\n          <li key={registro.id}>\r\n            <span>{registro.nombre}</span>\r\n            <button onClick={() => editarRegistro(registro.id)} className=\"edit-button\">\r\n              Editar\r\n            </button>\r\n            <button onClick={() => eliminarRegistro(registro.id)} className=\"delete-button\">\r\n              Eliminar\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrarGestores;\r\n","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\Transacciones.jsx",[],[],"C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\RegistrarMiembros.jsx",["85"],[],"import React, { useState } from 'react';\r\nimport '../styles/registrarMiembros.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RegistrarMiembros = () => {\r\n  const [formData, setFormData] = useState({\r\n    plancolectivo_id: 0,\r\n    correo: '',\r\n    nombre: '',\r\n    nit: 0,\r\n    telefono: 0,\r\n    direccion: '',\r\n    forma_participacion: '',\r\n    materiales_gestiona: '',\r\n    peso_total_reutilizable: 0,\r\n    peso_total_no_reutilizable: 0,\r\n  });\r\n\r\n  const [registros, setRegistros] = useState([]);\r\n  const [editandoId, setEditandoId] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const userConfirmed = window.confirm(\"¿Estás seguro de que deseas enviar el formulario?\");\r\n\r\n    if (userConfirmed) {\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      };\r\n\r\n      try {\r\n        console.log(formData);\r\n        const response = await fetch('http://localhost:3000/miembros/registrar', requestOptions); \r\n        if (response.ok) {\r\n          console.log('Registro exitoso');\r\n        } else {\r\n          console.error('Error al registrar');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al realizar la solicitud:', error);\r\n      }\r\n    } else {\r\n      console.log('Envío del formulario cancelado');\r\n    }\r\n  };\r\n\r\n  const handleCancelar = () => {\r\n    const confirmCancel = window.confirm(\"¿Seguro que quieres cancelar?\");\r\n    if (confirmCancel) {\r\n      // Redirige a la página de miembros (\"/miembros\")\r\n      window.location.href = \"/usuarios\";\r\n    }\r\n  };\r\n\r\n  const editarRegistro = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/miembros/${id}`); \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setFormData({ ...data });\r\n        setEditandoId(id);\r\n      } else {\r\n        console.error('Error al obtener detalles del registro');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al realizar la solicitud:', error);\r\n    }\r\n  };\r\n\r\n  const guardarEdicion = async () => {\r\n    const indiceEdicion = registros.findIndex((registro) => registro.id === editandoId);\r\n    if (indiceEdicion !== -1) {\r\n      const registroActualizado = { ...formData, id: editandoId };\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/miembros/${editandoId}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(registroActualizado),\r\n        });\r\n        if (response.ok) {\r\n          const nuevosRegistros = [...registros];\r\n          nuevosRegistros[indiceEdicion] = registroActualizado;\r\n          setRegistros(nuevosRegistros);\r\n\r\n          setFormData({\r\n            plancolectivo_id: 0,\r\n            correo: '',\r\n            nombre: '',\r\n            nit: 0,\r\n            telefono: 0,\r\n            direccion: '',\r\n            forma_participacion: '',\r\n            materiales_gestiona: '',\r\n            peso_total_reutilizable: 0,\r\n            peso_total_no_reutilizable: 0,\r\n          });\r\n          setEditandoId(null);\r\n\r\n          console.log('Edición exitosa');\r\n        } else {\r\n          console.error('Error al editar el registro');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al realizar la solicitud:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const eliminarRegistro = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/miembros/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (response.ok) {\r\n        const registrosActualizados = registros.filter((registro) => registro.id !== id);\r\n        setRegistros(registrosActualizados);\r\n\r\n        if (editandoId === id) {\r\n          setFormData({\r\n            plancolectivo_id: 0,\r\n            correo: '',\r\n            nombre: '',\r\n            nit: 0,\r\n            telefono: 0,\r\n            direccion: '',\r\n            forma_participacion: '',\r\n            materiales_gestiona: '',\r\n            peso_total_reutilizable: 0,\r\n            peso_total_no_reutilizable: 0,\r\n          });\r\n          setEditandoId(null);\r\n        }\r\n\r\n        console.log('Eliminación exitosa');\r\n      } else {\r\n        console.error('Error al eliminar el registro');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al realizar la solicitud:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"registrar-miembros-page\">\r\n      <h2>Formulario de Registro de Miembros</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Plan Colectivo ID</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"plancolectivo_id\"\r\n            value={formData.plancolectivo_id}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Correo</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"correo\"\r\n            value={formData.correo}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Nombre</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nombre\"\r\n            value={formData.nombre}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>NIT</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"nit\"\r\n            value={formData.nit}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Teléfono</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"telefono\"\r\n            value={formData.telefono}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Dirección</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"direccion\"\r\n            value={formData.direccion}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Forma de Participación</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"forma_participacion\"\r\n            value={formData.forma_participacion}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Materiales que Gestiona</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"materiales_gestiona\"\r\n            value={formData.materiales_gestiona}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Peso Total Reutilizable</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"peso_total_reutilizable\"\r\n            value={formData.peso_total_reutilizable}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Peso Total No Reutilizable</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"peso_total_no_reutilizable\"\r\n            value={formData.peso_total_no_reutilizable}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button type=\"submit\" className=\"submit-button\">Registrar</button>\r\n          {editandoId ? (\r\n            <button onClick={guardarEdicion} className=\"edit-button\">\r\n              Guardar Edición\r\n            </button>\r\n          ) : null}\r\n          <button type=\"button\" className=\"register-button\" onClick={handleCancelar}>Cancelar</button>\r\n        </div>\r\n      </form>\r\n      <h2>Registros</h2>\r\n      <ul>\r\n        {registros.map((registro) => (\r\n          <li key={registro.id}>\r\n            <span>{registro.nombre}</span>\r\n            <button onClick={() => editarRegistro(registro.id)} className=\"edit-button\">\r\n              Editar\r\n            </button>\r\n            <button onClick={() => eliminarRegistro(registro.id)} className=\"delete-button\">\r\n              Eliminar\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrarMiembros;\r\n","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\RegistrarTransformadores.jsx",["86"],[],"import React, { useState, useEffect } from 'react';\r\nimport '../styles/registrarMiembros.css';\r\n\r\nconst RegistrarTransformadores = () => {\r\n  const [formData, setFormData] = useState({\r\n    razonSocial: '',\r\n    representanteLegal: '',\r\n    nit: 0,\r\n    telefono: 0,\r\n    direccionPrincipal: '',\r\n    direccionPlanta: '',\r\n    departamento: '',\r\n    municipio: '',\r\n    correo: '',\r\n    materialQueProduce: '',\r\n    periodo: 0,\r\n    registroAnla: false,\r\n    numeroDeCertificado: 0,\r\n  });\r\n\r\n  const [registros, setRegistros] = useState([]);\r\n  const [editandoId, setEditandoId] = useState(null);\r\n\r\n  /*useEffect(() => {\r\n    // Al cargar el componente, obtener la lista de transformadores existentes\r\n    fetch('http://localhost:3000/transformadores')\r\n      .then((response) => response.json())\r\n      .then((data) => setRegistros(data))\r\n      .catch((error) => console.error('Error al obtener los transformadores:', error));\r\n  }, []);*/\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const userConfirmed = window.confirm(\"¿Estás seguro de que deseas enviar el formulario?\");\r\n\r\n    if (userConfirmed) {\r\n      \r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      };\r\n  \r\n      try {\r\n        console.log(formData);\r\n        const response = await fetch('http://localhost:3000/transformador/registrar', requestOptions);\r\n        \r\n        if (response.ok) {\r\n          console.log('Registro exitoso');\r\n        } else {\r\n          console.error('Error al registrar');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al realizar la solicitud:', error);\r\n      }\r\n    } else {\r\n      \r\n      console.log('Envío del formulario cancelado');\r\n    }\r\n  };\r\n\r\n  const handleCancelar = () => {\r\n    const confirmCancel = window.confirm('¿Seguro que quieres cancelar?');\r\n    if (confirmCancel) {\r\n      // Redirige a la página de transformadores (\"/transformadores\")\r\n      window.location.href = '/transformadores';\r\n    }\r\n  };\r\n\r\n  const editarRegistro = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/transformador/${id}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setFormData({ ...data });\r\n        setEditandoId(id);\r\n      } else {\r\n        console.error('Error al obtener detalles del registro');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al realizar la solicitud:', error);\r\n    }\r\n  };\r\n\r\n  const guardarEdicion = async () => {\r\n    const indiceEdicion = registros.findIndex((registro) => registro.id === editandoId);\r\n    if (indiceEdicion !== -1) {\r\n\r\n      const registroActualizado = { ...formData, id: editandoId };\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/transformadores/${editandoId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(registroActualizado),\r\n      });\r\n        if (response.ok) {\r\n          const nuevosRegistros = [...registros];\r\n          nuevosRegistros[indiceEdicion] = registroActualizado;\r\n          setRegistros(nuevosRegistros);\r\n\r\n          setFormData({\r\n            razonSocial: '',\r\n            representanteLegal: '',\r\n            nit: 0,\r\n            telefono: 0,\r\n            direccionPrincipal: '',\r\n            direccionPlanta: '',\r\n            departamento: '',\r\n            municipio: '',\r\n            correo: '',\r\n            materialQueProduce: '',\r\n            periodo: 0,\r\n            registroAnla: false,\r\n            numeroDeCertificado: 0,\r\n          });\r\n          setEditandoId(null);\r\n\r\n          console.log('Edición exitosa');\r\n        } else {\r\n          console.error('Error al editar el registro');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al realizar la solicitud:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const eliminarRegistro = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/transformadores/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    if (response.ok) {\r\n        const registrosActualizados = registros.filter((registro) => registro.id !== id);\r\n        setRegistros(registrosActualizados);\r\n\r\n        if (editandoId === id) {\r\n          setFormData({\r\n            razonSocial: '',\r\n            representanteLegal: '',\r\n            nit: 0,\r\n            telefono: 0,\r\n            direccionPrincipal: '',\r\n            direccionPlanta: '',\r\n            departamento: '',\r\n            municipio: '',\r\n            correo: '',\r\n            materialQueProduce: '',\r\n            periodo: 0,\r\n            registroAnla: false,\r\n            numeroDeCertificado: 0,\r\n          });\r\n          setEditandoId(null);\r\n        }\r\n\r\n        console.log('Eliminación exitosa');\r\n      } else {\r\n        console.error('Error al eliminar el registro');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al realizar la solicitud:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"registrar-miembros-page\">\r\n      <h2>Formulario de Registro de Transformadores</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Razón Social</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"razonSocial\"\r\n            value={formData.razonSocial}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Representante Legal</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"representanteLegal\"\r\n            value={formData.representanteLegal}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>NIT</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"nit\"\r\n            value={formData.nit}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Teléfono</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"telefono\"\r\n            value={formData.telefono}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Dirección Principal</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"direccionPrincipal\"\r\n            value={formData.direccionPrincipal}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Dirección Planta</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"direccionPlanta\"\r\n            value={formData.direccionPlanta}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Departamento</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"departamento\"\r\n            value={formData.departamento}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Municipio</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"municipio\"\r\n            value={formData.municipio}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Correo</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"correo\"\r\n            value={formData.correo}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Material que Produce</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"materialQueProduce\"\r\n            value={formData.materialQueProduce}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Período</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"periodo\"\r\n            value={formData.periodo}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Registro ANLA</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"registroAnla\"\r\n            checked={formData.registroAnla}\r\n            onChange={(e) => setFormData({ ...formData, registroAnla: e.target.checked })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Número de Certificado</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"numeroDeCertificado\"\r\n            value={formData.numeroDeCertificado}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button type=\"submit\" className=\"submit-button\">Registrar</button>\r\n          {editandoId ? (\r\n            <button onClick={guardarEdicion} className=\"edit-button\">\r\n              Guardar Edición\r\n            </button>\r\n          ) : null}\r\n          <button type=\"button\" className=\"register-button\" onClick={handleCancelar}>Cancelar</button>\r\n        </div>\r\n      </form>\r\n      <h2>Registros</h2>\r\n      <ul>\r\n        {registros.map((registro) => (\r\n          <li key={registro.id}>\r\n            <span>{registro.razonSocial}</span>\r\n            <button onClick={() => editarRegistro(registro.id)} className=\"edit-button\">\r\n              Editar\r\n            </button>\r\n            <button onClick={() => eliminarRegistro(registro.id)} className=\"delete-button\">\r\n              Eliminar\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrarTransformadores;\r\n\r\n\r\n","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\components\\Sidebar.jsx",["87"],[],"import React, { useState } from 'react';\r\n\r\nimport {\r\n    FaTh,\r\n    FaBars,\r\n    FaUserAlt,\r\n    FaRegChartBar,\r\n    FaCommentAlt,\r\n    FaShoppingBag,\r\n    FaThList\r\n}from \"react-icons/fa\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Sidebar = ({children}) => {\r\n    const[isOpen ,setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen (!isOpen);\r\n    const menuItem=[\r\n        {\r\n            path:\"/\",\r\n            name:\"Inicio\",\r\n            icon:<FaTh/>\r\n        },\r\n        {\r\n            path:\"/usuarios\",\r\n            name:\"Usuarios\",\r\n            icon:<FaUserAlt/>,\r\n            /*children: [\r\n                {label:\"Miembros\",key:\"/miembros\" },\r\n                {label:\"Gestores\",key:\"/gestores\" },\r\n                {label:\"Transformadores\",key:\"/transformadores\" }\r\n            ],*/\r\n        },\r\n        {\r\n            path:\"/gestores\",\r\n            name:\"Gestores\",\r\n            icon:<FaUserAlt/>,\r\n\r\n        },\r\n        {\r\n            path:\"/transformadores\",\r\n            name:\"Transformadores\",\r\n            icon:<FaUserAlt/>,\r\n\r\n        },\r\n        {\r\n            path:\"/estadisticas\",\r\n            name:\"Estadisticas\",\r\n            icon:<FaRegChartBar/>\r\n        },\r\n        {\r\n            path:\"/transacciones\",\r\n            name:\"Transacciones\",\r\n            icon:<FaCommentAlt/>\r\n        },\r\n        {\r\n            path:\"/logout\",\r\n            name:\"Salir de sesion\",\r\n            icon:<FaShoppingBag/>\r\n        },\r\n       \r\n    ]\r\n    return (\r\n        <div className=\"container\">\r\n           <div style={{width: isOpen ? \"200px\" : \"50px\"}} className=\"sidebar\">\r\n               <div className=\"top_section\">\r\n                   <h1 style={{display: isOpen ? \"block\" : \"none\"}} className=\"logo\">Logo</h1>\r\n                   <div style={{marginLeft: isOpen ? \"50px\" : \"0px\"}} className=\"bars\">\r\n                       <FaBars onClick={toggle}/>\r\n                   </div>\r\n               </div>\r\n               {\r\n                   menuItem.map((item, index)=>(\r\n                       <NavLink to={item.path} key={index} className=\"link\" activeclassName=\"active\">\r\n                           <div className=\"icon\">{item.icon}</div>\r\n                           <div style={{display: isOpen ? \"block\" : \"none\"}} className=\"link_text\">{item.name}</div>\r\n                       </NavLink>\r\n                   ))\r\n               }\r\n           </div>\r\n           <main>{children}</main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","C:\\Users\\JULIAN C\\Desktop\\PI2.3\\PI2\\src\\pages\\RegistrarTransacciones.jsx",["88","89"],[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"94","severity":1,"message":"98","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"99","line":10,"column":5,"nodeType":"96","messageId":"97","endLine":10,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"94","severity":1,"message":"100","line":16,"column":21,"nodeType":"96","messageId":"97","endLine":16,"endColumn":33},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'FaThList' is defined but never used.","'setRegistros' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]